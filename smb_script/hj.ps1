powershell -ExecutionPolicy Bypass -Command "$ShareName = 'development'; $FolderPath = 'C:\development'; $Username = 'development'; $Password = 'development'; $Access = 'Full'; $userExists = $false; try { net user $Username 2>$null | Out-Null; if ($LASTEXITCODE -eq 0) { $userExists = $true } } catch { $userExists = $false }; if ($userExists) { net user $Username $Password; Write-Host 'User exists - password updated' } else { net user $Username $Password /add; net localgroup 'Users' $Username /add; Write-Host 'Created user' }; if (-Not (Test-Path $FolderPath)) { New-Item -Path $FolderPath -ItemType Directory -Force; Write-Host 'Created folder' }; $Acl = Get-Acl $FolderPath; $Ar = New-Object System.Security.AccessControl.FileSystemAccessRule($Username, $Access, 'ContainerInherit,ObjectInherit', 'None', 'Allow'); $Acl.SetAccessRule($Ar); Set-Acl $FolderPath $Acl; Write-Host 'Set NTFS permissions'; New-SmbShare -Name $ShareName -Path $FolderPath -FullAccess $Username; Write-Host 'Created SMB Share'; $firewallRules = @('File and Printer Sharing (SMB-In)', 'File and Printer Sharing (NB-Session-In)', 'File and Printer Sharing (Echo Request - ICMPv4-In)', 'File and Printer Sharing (NB-Name-In)', 'File and Printer Sharing (NB-Datagram-In)'); foreach ($rule in $firewallRules) { Set-NetFirewallRule -DisplayName $rule -Enabled True -Profile Domain,Private -Action Allow -ErrorAction SilentlyContinue }; Write-Host 'Enabled File and Printer Sharing'; Set-NetFirewallRule -DisplayGroup 'Network Discovery' -Enabled True -Profile Domain,Private -Action Allow -ErrorAction SilentlyContinue; Write-Host 'All done. SMB Share ready.'"